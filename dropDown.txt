Padding(
              padding: const EdgeInsets.symmetric(horizontal: 40.0),
              child: DropdownButtonFormField(
                hint: const Text('Select:'),
                borderRadius: BorderRadius.circular(18),
                icon: const Icon(Icons.arrow_drop_down_circle_outlined),
                decoration: const InputDecoration(
                  border: OutlineInputBorder(
                      borderSide: BorderSide(
                          style: BorderStyle.solid,
                          color: Colors.black,
                          width: 5)),
                  enabledBorder: OutlineInputBorder(
                    borderSide: BorderSide(color: Colors.black, width: 2),
                  ),
                  focusedBorder: OutlineInputBorder(
                    borderSide: BorderSide(color: Colors.black, width: 2),
                  ),
                  filled: true,
                  fillColor: Colors.greenAccent,
                ),
                dropdownColor: Colors.greenAccent,
                isDense: true,
                isExpanded: true,
                items: <String>[
                  'Dog',
                  'Cat',
                  'Tiger',
                  'Lion',
                  'Dog1',
                  'Cat1',
                  'Tiger1',
                  'Lion1',
                  'Dog2',
                  'Cat3',
                  'Tiger4',
                  'Lion5'
                ].map<DropdownMenuItem<String>>((String value) {
                  return DropdownMenuItem<String>(
                    value: value,
                    child: Column(
                      children: [
                        Text(
                          value,
                          style: const TextStyle(fontSize: 18),
                        ),
                        const Divider(height: 0, color: Colors.black),
                      ],
                    ),
                  );
                }).toList(),
                onChanged: (String? newValue) {
                  toast.Fluttertoast.showToast(msg: newValue.toString());
                  debugPrint(newValue);
                },
              ),
            ),















            Padding(
              padding: const EdgeInsets.all(18.0),
              child: InputDecorator(
                decoration: const InputDecoration(contentPadding: EdgeInsets.symmetric(vertical: 5, horizontal: 7),
                    border: OutlineInputBorder(
                        gapPadding: 0,
                        borderRadius: BorderRadius.all(Radius.circular(5)),
                        borderSide: BorderSide(width: 4, color: Colors.cyan))),
                child: DropdownButtonHideUnderline(
                  child: DropdownButton(
                    hint:
                        const Text('Select item:', style: TextStyle(height: 0)),
                    borderRadius: BorderRadius.circular(10),
                    menuMaxHeight: 300,
                    style: const TextStyle(color: Colors.black, fontSize: 16),
                    icon: const Icon(Icons.arrow_drop_down_circle_outlined),
                    items: <String>[
                      'Dog',
                      'Cat',
                      'Tiger',
                      'Lion',
                      'Dog1',
                      'Cat1',
                      'Tiger1',
                      'Lion1'
                    ].map<DropdownMenuItem<String>>((String value) {
                      return DropdownMenuItem<String>(
                        value: value,
                        child: Text(
                          value,
                          style: const TextStyle(fontSize: 16),
                        ),
                      );
                    }).toList(),
                    onChanged: (String? newValue) {
                      toast.Fluttertoast.showToast(msg: newValue.toString());
                      debugPrint(newValue);
                    },
                  ),
                ),
              ),
            ),